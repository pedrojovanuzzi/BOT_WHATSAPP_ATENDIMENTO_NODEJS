"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }var _sequelize = require('sequelize');
var _database2js = require('../config/database2.js'); var _database2js2 = _interopRequireDefault(_database2js);

class Client extends _sequelize.Model {
  static init(sequelize) {
    super.init({
        id: {
            type: _sequelize.DataTypes.INTEGER,
            primaryKey: true,
            autoIncrement: true
        },
        nome: _sequelize.DataTypes.STRING,
        email: _sequelize.DataTypes.STRING,
        endereco: _sequelize.DataTypes.STRING,
        bairro: _sequelize.DataTypes.STRING,
        cidade: _sequelize.DataTypes.STRING,
        cep: _sequelize.DataTypes.STRING,
        estado: _sequelize.DataTypes.STRING,
        cpf_cnpj: _sequelize.DataTypes.STRING,
        fone: _sequelize.DataTypes.STRING,
        obs: _sequelize.DataTypes.TEXT,
        nascimento: _sequelize.DataTypes.STRING,
        estado_civil: _sequelize.DataTypes.ENUM('S', 'C', 'D', 'V'),
        cadastro: _sequelize.DataTypes.DATE,
        login: _sequelize.DataTypes.STRING,
        tipo: _sequelize.DataTypes.STRING,
        night: _sequelize.DataTypes.STRING,
        aviso: _sequelize.DataTypes.TEXT,
        foto: _sequelize.DataTypes.STRING,
        venc: _sequelize.DataTypes.STRING,
        mac: _sequelize.DataTypes.STRING,
        complemento: _sequelize.DataTypes.STRING,
        ip: _sequelize.DataTypes.STRING,
        ramal: _sequelize.DataTypes.STRING,
        rg: _sequelize.DataTypes.STRING,
        isento: _sequelize.DataTypes.BOOLEAN,
        celular: _sequelize.DataTypes.STRING,
        bloqueado: _sequelize.DataTypes.ENUM('sim', 'nao'),
        autoip: _sequelize.DataTypes.ENUM('sim', 'nao'),
        automac: _sequelize.DataTypes.ENUM('sim', 'nao'),
        conta: _sequelize.DataTypes.STRING,
        ipvsix: _sequelize.DataTypes.STRING,
        plano: _sequelize.DataTypes.STRING,
        send: _sequelize.DataTypes.STRING,
        cli_ativado: _sequelize.DataTypes.ENUM('s', 'n'),
        simultaneo: _sequelize.DataTypes.STRING,
        turbo: _sequelize.DataTypes.STRING,
        comodato: _sequelize.DataTypes.STRING,
        observacao: _sequelize.DataTypes.ENUM('sim', 'nao'),
        chavetipo: _sequelize.DataTypes.STRING,
        chave: _sequelize.DataTypes.STRING,
        contrato: _sequelize.DataTypes.STRING,
        ssid: _sequelize.DataTypes.STRING,
        senha: _sequelize.DataTypes.STRING,
        numero: _sequelize.DataTypes.STRING,
        responsavel: _sequelize.DataTypes.STRING,
        nome_pai: _sequelize.DataTypes.STRING,
        nome_mae: _sequelize.DataTypes.STRING,
        expedicao_rg: _sequelize.DataTypes.STRING,
        naturalidade: _sequelize.DataTypes.STRING,
        acessacen: _sequelize.DataTypes.STRING,
        pessoa: _sequelize.DataTypes.STRING,
        endereco_res: _sequelize.DataTypes.STRING,
        numero_res: _sequelize.DataTypes.STRING,
        bairro_res: _sequelize.DataTypes.STRING,
        cidade_res: _sequelize.DataTypes.STRING,
        cep_res: _sequelize.DataTypes.STRING,
        estado_res: _sequelize.DataTypes.STRING,
        complemento_res: _sequelize.DataTypes.STRING,
        desconto: _sequelize.DataTypes.DECIMAL,
        acrescimo: _sequelize.DataTypes.DECIMAL,
        equipamento: _sequelize.DataTypes.STRING,
        vendedor: _sequelize.DataTypes.STRING,
        nextel: _sequelize.DataTypes.STRING,
        accesslist: _sequelize.DataTypes.ENUM('sim', 'nao'),
        resumo: _sequelize.DataTypes.STRING,
        grupo: _sequelize.DataTypes.STRING,
        codigo: _sequelize.DataTypes.STRING,
        prilanc: _sequelize.DataTypes.ENUM('pro', 'tot'),
        tipobloq: _sequelize.DataTypes.ENUM('aut', 'man'),
        adesao: _sequelize.DataTypes.DECIMAL,
        mbdisco: _sequelize.DataTypes.INTEGER,
        sms: _sequelize.DataTypes.ENUM('sim', 'nao'),
        ltrafego: _sequelize.DataTypes.BIGINT,
        planodown: _sequelize.DataTypes.STRING,
        ligoudown: _sequelize.DataTypes.STRING,
        statusdown: _sequelize.DataTypes.ENUM('on', 'off'),
        statusturbo: _sequelize.DataTypes.ENUM('on', 'off'),
        opcelular: _sequelize.DataTypes.STRING,
        nome_res: _sequelize.DataTypes.STRING,
        coordenadas: _sequelize.DataTypes.STRING,
        rem_obs: _sequelize.DataTypes.DATE,
        valor_sva: _sequelize.DataTypes.DECIMAL,
        dias_corte: _sequelize.DataTypes.INTEGER,
        user_ip: _sequelize.DataTypes.STRING,
        user_mac: _sequelize.DataTypes.STRING,
        data_ip: _sequelize.DataTypes.DATE,
        data_mac: _sequelize.DataTypes.DATE,
        last_update: _sequelize.DataTypes.DATE,
        data_bloq: _sequelize.DataTypes.DATE,
        tags: _sequelize.DataTypes.TEXT,
        tecnico: _sequelize.DataTypes.STRING,
        data_ins: _sequelize.DataTypes.DATE,
        altsenha: _sequelize.DataTypes.ENUM('sim', 'nao'),
        geranfe: _sequelize.DataTypes.ENUM('sim', 'nao'),
        mesref: _sequelize.DataTypes.ENUM('now', 'ant'),
        ipfall: _sequelize.DataTypes.STRING,
        tit_abertos: _sequelize.DataTypes.INTEGER,
        parc_abertas: _sequelize.DataTypes.INTEGER,
        tipo_pessoa: _sequelize.DataTypes.INTEGER,
        celular2: _sequelize.DataTypes.STRING,
        mac_serial: _sequelize.DataTypes.STRING,
        status_corte: _sequelize.DataTypes.ENUM('full','down','bloq'),
        plano15: _sequelize.DataTypes.STRING,
        pgaviso: _sequelize.DataTypes.ENUM('sim', 'nao'),
        porta_olt: _sequelize.DataTypes.STRING,
        caixa_herm: _sequelize.DataTypes.STRING,
        porta_splitter: _sequelize.DataTypes.STRING,
        onu_ont: _sequelize.DataTypes.STRING,
        switch: _sequelize.DataTypes.STRING,
        tit_vencidos: _sequelize.DataTypes.INTEGER,
        pgcorte: _sequelize.DataTypes.ENUM('sim', 'nao'),
        interface: _sequelize.DataTypes.STRING,
        login_atend: _sequelize.DataTypes.STRING,
        cidade_ibge: _sequelize.DataTypes.STRING,
        estado_ibge: _sequelize.DataTypes.STRING,
        data_desbloq: _sequelize.DataTypes.DATE,
        pool_name: _sequelize.DataTypes.STRING,
        pool6: _sequelize.DataTypes.STRING,
        rec_email: _sequelize.DataTypes.ENUM('sim', 'nao'),
        dot_ref: _sequelize.DataTypes.STRING,
        conta_cartao: _sequelize.DataTypes.INTEGER,
        termo: _sequelize.DataTypes.STRING,
        opcelular2: _sequelize.DataTypes.STRING,
        tipo_cliente: _sequelize.DataTypes.INTEGER,
        armario_olt: _sequelize.DataTypes.STRING,
        plano_bloqc: _sequelize.DataTypes.STRING,
        uuid_cliente: _sequelize.DataTypes.STRING,
        data_desativacao: _sequelize.DataTypes.DATE,
        tipo_cob: _sequelize.DataTypes.ENUM('titulo','carne'),
        fortunus: _sequelize.DataTypes.TINYINT,
        gsici: _sequelize.DataTypes.TINYINT,
        local_dici: _sequelize.DataTypes.ENUM('u','r')
    }, {
      sequelize,
      modelName: 'Client',
      tableName: 'sis_cliente', // Substitua pelo nome da sua tabela
      timestamps: false,
    });

    return this;
  }
}

Client.init(_database2js2.default);

exports. default = Client;
